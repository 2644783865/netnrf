@{
    ViewBag.Title = "系统角色";
}

@model RF.Model.sys_role


<div id="Grid1"></div>

@{Html.RenderAction("Action_BuildForm", "Partial", new { vname = "sys_role", modalsize = "1" });}

<!--模态 表单-->
<div class="modal fade" id="myModalPower" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">
                    <i class="fa fa-cog orange fa-2x" style="margin-right:10px;vertical-align:middle"></i>权限设置
                </h4>
            </div>

            <div class="modal-body" style="overflow:auto">
                <!--导航菜单树-->
                <div class="col-md-6 col-sm-6">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            菜单导航
                        </div>
                        <div class="panel-body" style="height:300px">
                            <ul id="ulMenuTree"></ul>
                        </div>
                    </div>
                </div>
                <!--菜单对应按钮-->
                <div class="col-md-6 col-sm-6">
                    <div id="pGrid2" style="height:341px">
                        <div id="Grid2"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSavePower" type="button" class="btn btn-primary"><span class="fa fa-save"></span>&nbsp;保存</button>
            </div>
        </div>
    </div>
</div>

<input type="hidden" value="@ViewBag.MenuTreeJson" id="hid_menu" />

<script src="/Scripts/z.js"></script>

<script>

    //菜单、按钮、菜单JSON
    var pMenu = "", pButton = {}, menuJson = $.parseJSON($('#hid_menu').val());

    var gd1 = z.Grid();
    gd1.url = "/Common/QueryData?uri=pprole";
    gd1.load();

    //刷新
    z.button('reload', function () {
        gd1.load();
    });

    //表格配置
    z.DC["TableN"] = { vname: "sys_role" };

    //表单配置 表单ID索引，区域标题，配置对象
    z.DC["FormN"] = [{ index: 1, areas: [], active: true, vname: "sys_role" }];

    //新增前 准备
    function addReady() {
        $('#_af_saveadd_1').show();
        $('#_af_save_1').attr('savetype', 0);
        z.RequiredValidation('reset', '#_af_form_1');
        z.FormTitle({
            id: "#_af_title_1",
            icon: 0,
            title: '新增角色'
        });
        z.FormClear("#_af_form_1");
        $('#_af_modal_1').modal('show');
    }

    //新增
    z.button('add', function () {
        addReady();
    });

    z.isPC() && gd1.dblclickRowE(UpdateFn);
    z.button('edit', UpdateFn);
    //修改(双击行模拟触发修改按钮点击事件)
    function UpdateFn() {
        z.RequiredValidation('reset', '#_af_form_1');
        $('#_af_saveadd_1').hide();
        var rowData = gd1.row();
        if (rowData) {
            gd1.rowEdit();
            z.FormTitle({
                id: "#_af_title_1",
                icon: 1,
                title: '修改角色'
            });
            $('#_af_save_1').attr('savetype', rowData.id);
            $('#_af_modal_1').modal('show');
        } else {
            art('select');
        }
    }

    //保存
    function SaveFn() {
        if (z.RequiredValidation('red', '#_af_form_1')) {
            var postData = $("#_af_form_1").serialize(),
                savetype = $('#_af_save_1').attr('savetype');

            $('#_af_save_1')[0].disabled = true;
            $('#_af_saveadd_1')[0].disabled = true;

            $.ajax({
                url: "/Setting/SaveSysRole?savetype=" + savetype,
                type: "post",
                data: postData,
                success: function (data) {
                    if (data == "success") {
                        if (savetype == 0) {
                            $('#_af_save_1').attr('saveadd') == 1 ? addReady() : $('#_af_modal_1').modal('hide');
                            gd1.F5();
                        } else {
                            gd1.updataRow(z.FormToJson("#_af_form_1"))
                            $('#_af_modal_1').modal('hide');
                        }
                    } else {
                        art('fail');
                    }
                },
                error: function () {
                    art('error');
                }
            });

            $('#_af_save_1')[0].disabled = false;
            $('#_af_saveadd_1')[0].disabled = false;
        }
    }
    $('#_af_save_1').click(function () {
        $('#_af_save_1').attr('saveadd', 0);
        SaveFn();
    });
    $('#_af_saveadd_1').click(function () {
        $('#_af_save_1').attr('saveadd', 1);
        SaveFn();
    });

    //删除
    z.button('del', function () {
        var rowData = gd1.row();
        if (!rowData) {
            art('select');
            return false;
        }
        art('确定删除选中的行', function () {
            $.ajax({
                url: "/Setting/DelSysRole?id=" + rowData.id,
                type: "post",
                success: function (data) {
                    if (data == "success") {
                        gd1.F5();
                    } else {
                        art('fail');
                    }
                }
            })
        });
    });

    //菜单导航树
    var completeCheck = 0;
    function BindMenuTree(json, ids) {
        completeCheck = 0;
        ids = ids ? ids.split(',') : [];
        $('#ulMenuTree').tree({
            data: json,
            checkbox: true,
            onBeforeSelect: function (node) {
                return node.children == null;
            },
            onCheck: function (node, checked) {
                if (completeCheck) {
                    var mIn = $('#ulMenuTree').tree('getChecked'),
                        mInQ = $('#ulMenuTree').tree('getChecked', 'indeterminate'),
                        mInS = mIn.concat(mInQ),
                        ids = [];
                    $(mInS).each(function () {
                        ids.push(this.id);
                    });
                    pMenu = ids.join(',');
                }
            },
            onSelect: function (node) {
                $(gd2.id).datagrid('unselectAll');
                var btns = pButton[node.id];
                if (btns) {
                    btns = btns.split(',');
                    var rows = gd2.rowAll();
                    $(rows).each(function () {
                        for (var i = 0; i < btns.length; i++) {
                            if (this.id == btns[i]) {
                                var rIndex = $(gd2.id).datagrid('getRowIndex', this);
                                $(gd2.id).datagrid('checkRow', rIndex);
                            }
                        }
                    })
                }
            },
            onLoadSuccess: function () {
                var umt = $('#ulMenuTree'), nodes = umt.tree('getChildren');
                $(nodes).each(function () {
                    for (var i = 0; i < ids.length; i++) {
                        if (this.id == ids[i]) {
                            umt.tree('check', this.target);
                        }
                    }
                });
                completeCheck = 1;
            }
        });
    }


    //菜单按钮
    var gd2 = z.Grid();
    gd2.id = "#Grid2";
    gd2.autosizePid = "#pGrid2";
    gd2.autosize = "p";
    gd2.url = "/Common/QueryData?uri=ppbutton";
    gd2.columnsExists = 1;
    gd2.pageSize = 999;
    gd2.page = false;
    gd2.checkbox = true;
    gd2.single = false;
    gd2.bindBeforeE = function () {
        gd2.columns = [
            { field: "b_title", title: "按钮名称", width: 120 },
            { field: "b_remark", title: "备注说明", width: 120 }
        ];
    }

    //权限设置
    z.button('auth', function () {
        var rowData = gd1.row();
        if (rowData) {
            $('#myModalPower').modal();
            rowData.r_menus && (pMenu = rowData.r_menus);
            rowData.r_buttons && (pButton = $.parseJSON(rowData.r_buttons));
            BindMenuTree(menuJson, pMenu);
        } else {
            art('select');
        }
    });
    $('#myModalPower').on('shown.bs.modal', function () {
        if ($(this).attr('data-init') != 1) {
            $(this).attr('data-init', 1);
            gd2.load();
        } else {
            gd2.F5Local();
        }
    });


    //更新按钮
    $(gd2.autosizePid).mousedown(function () {
        setTimeout(function () {
            var mIn = $('#ulMenuTree').tree('getSelected');
            if (mIn) {
                var rowData = gd2.row(), ids = [];
                if (rowData) {
                    $(rowData).each(function () {
                        ids.push(this.id);
                    });
                }
                pButton[mIn.id] = ids.join(',');
            }
        }, 200);
    });

    //保存菜单及按钮
    $('#btnSavePower').click(function () {
        var obj = { r_menus: pMenu, r_buttons: JSON.stringify(pButton) };
        $.ajax({
            url: '/Setting/SaveSysRoleAuth?id=' + gd1.row().id,
            type: 'post',
            data: obj,
            success: function (data) {
                if (data == "success") {
                    $('#myModalPower').modal('hide');
                    gd1.updataRow(obj);
                } else {
                    art('fail');
                }
            },
            error: function () {
                art('error');
            }
        })
    });
</script>