using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;

namespace @dataNamespace@
{
    /// <summary>
    /// 通用泛型接口
    /// </summary>
    /// <typeparam name="TEntity"></typeparam>
    public interface IRepositoryBase<TEntity> where TEntity : class, new()
    {
        int Insert(TEntity entity, bool isSave = true);
        int Insert(List<TEntity> entitys, bool isSave = true);

        int Update(TEntity entity, bool isSave = true);
        int Update(List<TEntity> entitys, bool isSave = true);

        int Delete(TEntity entity, bool isSave = true);
        int Delete(Expression<Func<TEntity, bool>> predicate, bool isSave = true);

        TEntity FindEntity(object keyValue);
        TEntity FindEntity(Expression<Func<TEntity, bool>> predicate);

        IQueryable<TEntity> IQueryable();
        IQueryable<TEntity> IQueryable(Expression<Func<TEntity, bool>> predicate);

        List<TEntity> FindList(Expression<Func<TEntity, bool>> pWhere, DataBase.Pagination pag);
        List<TEntity> FindList(IQueryable<TEntity> query, DataBase.Pagination pag);
    }
}
